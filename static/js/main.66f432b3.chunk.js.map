{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["title","windowOpenKeyframes","keyframes","windowCloseKeyframes","window","css","reactTransitionGroupWindow","image","button","App","useState","open","setOpen","reactTransitionGroupOpen","setReactTransitionGroupOpen","className","src","alt","width","height","onClick","currentState","CSSTransition","in","timeout","classNames","unmountOnExit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAsDA,IAAMA,EAAK,yFAOLC,EAAsBC,YAAH,0JAWnBC,EAAuBD,YAAH,2JAWpBE,EAASC,YAAH,6UAiBKJ,EAjBL,uCAoBKE,EApBL,yBAwBNG,EAA0B,isBAmC1BC,EAAK,gFAMLC,EAAM,wPAgBGC,EA/Jf,WAA6B,IAAD,EACFC,oBAAS,GADP,mBACnBC,EADmB,KACbC,EADa,OAKxBF,oBAAS,GALe,mBAInBG,EAJmB,KAIOC,EAJP,KAQ1B,OACE,mBAAKC,UAAU,MAAf,UACE,iBAAGV,IAAKL,EAAR,sBACCW,GACC,mBAAKN,IAAKD,EAAQW,UAAWJ,EAAO,OAAS,QAA7C,SACE,mBACEK,IAAI,gCACJC,IAAI,GACJZ,IAAKE,EACLW,MAAM,MACNC,OAAO,UAIb,sBAAQd,IAAKG,EAAQY,QApBN,kBAAMR,GAAQ,SAACS,GAAD,OAAmBA,MAoBhD,SACGV,EAAO,QAAU,SAEpB,iBAAGN,IAAKL,EAAR,oCACA,YAACsB,EAAA,EAAD,CACEC,GAAIV,EACJW,QAAS,IACTC,WAAW,yBACXC,eAAa,EAJf,SAME,mBAAKrB,IAAKC,EAAV,SACE,mBACEU,IAAI,gCACJC,IAAI,GACJZ,IAAKE,EACLW,MAAM,MACNC,OAAO,YAIb,sBAAQd,IAAKG,EAAQY,QApCc,kBACrCN,GAA4B,SAACO,GAAD,OAAmBA,MAmC7C,SACGR,EAA2B,QAAU,aClC/Bc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,YAAC,IAAMC,WAAP,UACE,YAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66f432b3.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { css, keyframes } from \"@emotion/react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction App(): JSX.Element {\n  const [open, setOpen] = useState(false);\n  const toggleOpen = () => setOpen((currentState) => !currentState);\n\n  const [reactTransitionGroupOpen, setReactTransitionGroupOpen] =\n    useState(false);\n  const toggleReactTransitionGroupOpen = () =>\n    setReactTransitionGroupOpen((currentState) => !currentState);\n  return (\n    <div className=\"App\">\n      <p css={title}>CSS Only</p>\n      {open && (\n        <div css={window} className={open ? \"open\" : \"close\"}>\n          <img\n            src=\"https://picsum.photos/360/240\"\n            alt=\"\"\n            css={image}\n            width=\"360\"\n            height=\"240\"\n          />\n        </div>\n      )}\n      <button css={button} onClick={toggleOpen}>\n        {open ? \"Close\" : \"Open\"}\n      </button>\n      <p css={title}>React Transition Group</p>\n      <CSSTransition\n        in={reactTransitionGroupOpen}\n        timeout={200}\n        classNames=\"react-transition-group\"\n        unmountOnExit\n      >\n        <div css={reactTransitionGroupWindow}>\n          <img\n            src=\"https://picsum.photos/360/240\"\n            alt=\"\"\n            css={image}\n            width=\"360\"\n            height=\"240\"\n          />\n        </div>\n      </CSSTransition>\n      <button css={button} onClick={toggleReactTransitionGroupOpen}>\n        {reactTransitionGroupOpen ? \"Close\" : \"Open\"}\n      </button>\n    </div>\n  );\n}\n\nconst title = css`\n  align-self: flex-end;\n  color: #fff;\n  font-size: 40px;\n  font-weight: bold;\n`;\n\nconst windowOpenKeyframes = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst windowCloseKeyframes = keyframes`\n  from {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(-20%);\n  }\n`;\n\nconst window = css`\n  align-self: center;\n  background-color: #fff;\n  border-radius: 8px;\n  color: #212121;\n  font-size: 40px;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  justify-self: center;\n  opacity: 0;\n  padding: 20px;\n  transform: translateY(0);\n  transition-duration: 300ms;\n  transition-property: opacity, transform;\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  width: 400px;\n  &.open {\n    animation: ${windowOpenKeyframes} ease 300ms both;\n  }\n  &.close {\n    animation: ${windowCloseKeyframes} ease 300ms both;\n  }\n`;\n\nconst reactTransitionGroupWindow = css`\n  align-self: center;\n  background-color: #fff;\n  border-radius: 8px;\n  color: #212121;\n  font-size: 40px;\n  grid-column: 2 / 3;\n  grid-row: 2 / 3;\n  justify-self: center;\n  padding: 20px;\n  width: 400px;\n  &.react-transition-group-enter {\n    opacity: 0;\n    transform: translateY(50%);\n  }\n  &.react-transition-group-enter-active {\n    opacity: 1;\n    transform: translateY(0);\n    transition-duration: 300ms;\n    transition-property: opacity, transform;\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n  &.react-transition-group-exit {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  &.react-transition-group-exit-active {\n    opacity: 0;\n    transform: translateY(-20%);\n    transition-duration: 150ms;\n    transition-property: opacity, transform;\n    transition-timing-function: cubic-bezier(0.4, 0, 1, 1);\n  }\n`;\n\nconst image = css`\n  background-color: #eee;\n  border-radius: 4px;\n  display: block;\n`;\n\nconst button = css`\n  align-self: flex-start;\n  background-color: #61dafb;\n  border: none;\n  border-radius: 8px;\n  color: #212121;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: bold;\n  grid-row: 3 / 4;\n  justify-self: center;\n  padding: 20px 40px;\n  text-decoration: none;\n  width: 200px;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}